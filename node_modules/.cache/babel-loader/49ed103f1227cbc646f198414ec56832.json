{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Options = void 0;\n\nconst Interactivity_1 = require(\"./Interactivity/Interactivity\");\n\nconst Particles_1 = require(\"./Particles/Particles\");\n\nconst BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\n\nconst Background_1 = require(\"./Background/Background\");\n\nconst Infection_1 = require(\"./Infection/Infection\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Theme_1 = require(\"./Theme/Theme\");\n\nconst Modes_1 = require(\"../../Enums/Modes\");\n\nconst FullScreen_1 = require(\"./FullScreen/FullScreen\");\n\nconst Motion_1 = require(\"./Motion/Motion\");\n\nconst ManualParticle_1 = require(\"./ManualParticle\");\n\nclass Options {\n  constructor() {\n    this.autoPlay = true;\n    this.background = new Background_1.Background();\n    this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n    this.fullScreen = new FullScreen_1.FullScreen();\n    this.detectRetina = true;\n    this.fpsLimit = 60;\n    this.infection = new Infection_1.Infection();\n    this.interactivity = new Interactivity_1.Interactivity();\n    this.manualParticles = [];\n    this.motion = new Motion_1.Motion();\n    this.particles = new Particles_1.Particles();\n    this.pauseOnBlur = true;\n    this.pauseOnOutsideViewport = false;\n    this.themes = [];\n  }\n\n  get fps_limit() {\n    return this.fpsLimit;\n  }\n\n  set fps_limit(value) {\n    this.fpsLimit = value;\n  }\n\n  get retina_detect() {\n    return this.detectRetina;\n  }\n\n  set retina_detect(value) {\n    this.detectRetina = value;\n  }\n\n  get backgroundMode() {\n    return this.fullScreen;\n  }\n\n  set backgroundMode(value) {\n    this.fullScreen.load(value);\n  }\n\n  load(data) {\n    var _a, _b, _c;\n\n    if (data === undefined) {\n      return;\n    }\n\n    if (data.preset !== undefined) {\n      if (data.preset instanceof Array) {\n        for (const preset of data.preset) {\n          this.importPreset(preset);\n        }\n      } else {\n        this.importPreset(data.preset);\n      }\n    }\n\n    if (data.autoPlay !== undefined) {\n      this.autoPlay = data.autoPlay;\n    }\n\n    const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n\n    if (detectRetina !== undefined) {\n      this.detectRetina = detectRetina;\n    }\n\n    const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n\n    if (fpsLimit !== undefined) {\n      this.fpsLimit = fpsLimit;\n    }\n\n    if (data.pauseOnBlur !== undefined) {\n      this.pauseOnBlur = data.pauseOnBlur;\n    }\n\n    if (data.pauseOnOutsideViewport !== undefined) {\n      this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n    }\n\n    this.background.load(data.background);\n    this.fullScreen.load((_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode);\n    this.backgroundMask.load(data.backgroundMask);\n    this.infection.load(data.infection);\n    this.interactivity.load(data.interactivity);\n\n    if (data.manualParticles !== undefined) {\n      this.manualParticles = data.manualParticles.map(t => {\n        const tmp = new ManualParticle_1.ManualParticle();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n\n    this.motion.load(data.motion);\n    this.particles.load(data.particles);\n    Utils_1.Plugins.loadOptions(this, data);\n\n    if (data.themes !== undefined) {\n      for (const theme of data.themes) {\n        const optTheme = new Theme_1.Theme();\n        optTheme.load(theme);\n        this.themes.push(optTheme);\n      }\n    }\n  }\n\n  setTheme(name) {\n    if (name) {\n      const chosenTheme = this.themes.find(theme => theme.name === name);\n\n      if (chosenTheme) {\n        this.load(chosenTheme.options);\n      }\n    } else {\n      const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n      let defaultTheme = this.themes.find(theme => theme.default.value && (theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode || theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode));\n\n      if (!defaultTheme) {\n        defaultTheme = this.themes.find(theme => theme.default.value && theme.default.mode === Modes_1.ThemeMode.any);\n      }\n\n      if (defaultTheme) {\n        this.load(defaultTheme.options);\n      }\n    }\n  }\n\n  importPreset(preset) {\n    this.load(Utils_1.Plugins.getPreset(preset));\n  }\n\n}\n\nexports.Options = Options;","map":{"version":3,"sources":["/home/tarushi/Desktop/data_anecdotes/website/DataAnecdotesWebsite/node_modules/tsparticles/dist/Options/Classes/Options.js"],"names":["Object","defineProperty","exports","value","Options","Interactivity_1","require","Particles_1","BackgroundMask_1","Background_1","Infection_1","Utils_1","Theme_1","Modes_1","FullScreen_1","Motion_1","ManualParticle_1","constructor","autoPlay","background","Background","backgroundMask","BackgroundMask","fullScreen","FullScreen","detectRetina","fpsLimit","infection","Infection","interactivity","Interactivity","manualParticles","motion","Motion","particles","Particles","pauseOnBlur","pauseOnOutsideViewport","themes","fps_limit","retina_detect","backgroundMode","load","data","_a","_b","_c","undefined","preset","Array","importPreset","map","t","tmp","ManualParticle","Plugins","loadOptions","theme","optTheme","Theme","push","setTheme","name","chosenTheme","find","options","clientDarkMode","matchMedia","matches","defaultTheme","default","mode","ThemeMode","dark","light","any","getPreset"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Options = void 0;\nconst Interactivity_1 = require(\"./Interactivity/Interactivity\");\nconst Particles_1 = require(\"./Particles/Particles\");\nconst BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\nconst Background_1 = require(\"./Background/Background\");\nconst Infection_1 = require(\"./Infection/Infection\");\nconst Utils_1 = require(\"../../Utils\");\nconst Theme_1 = require(\"./Theme/Theme\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nconst FullScreen_1 = require(\"./FullScreen/FullScreen\");\nconst Motion_1 = require(\"./Motion/Motion\");\nconst ManualParticle_1 = require(\"./ManualParticle\");\nclass Options {\n    constructor() {\n        this.autoPlay = true;\n        this.background = new Background_1.Background();\n        this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n        this.fullScreen = new FullScreen_1.FullScreen();\n        this.detectRetina = true;\n        this.fpsLimit = 60;\n        this.infection = new Infection_1.Infection();\n        this.interactivity = new Interactivity_1.Interactivity();\n        this.manualParticles = [];\n        this.motion = new Motion_1.Motion();\n        this.particles = new Particles_1.Particles();\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = false;\n        this.themes = [];\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            if (data.preset instanceof Array) {\n                for (const preset of data.preset) {\n                    this.importPreset(preset);\n                }\n            }\n            else {\n                this.importPreset(data.preset);\n            }\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        this.background.load(data.background);\n        this.fullScreen.load((_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode);\n        this.backgroundMask.load(data.backgroundMask);\n        this.infection.load(data.infection);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle_1.ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.motion.load(data.motion);\n        this.particles.load(data.particles);\n        Utils_1.Plugins.loadOptions(this, data);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme_1.Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n            let defaultTheme = this.themes.find((theme) => theme.default.value &&\n                ((theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode) ||\n                    (theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode)));\n            if (!defaultTheme) {\n                defaultTheme = this.themes.find((theme) => theme.default.value && theme.default.mode === Modes_1.ThemeMode.any);\n            }\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    importPreset(preset) {\n        this.load(Utils_1.Plugins.getPreset(preset));\n    }\n}\nexports.Options = Options;\n"]},"metadata":{},"sourceType":"script"}