{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/sri/Desktop/DataAnecdotes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/sri/Desktop/DataAnecdotes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/sri/Desktop/DataAnecdotes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Options = void 0;\n\nvar Interactivity_1 = require(\"./Interactivity/Interactivity\");\n\nvar Particles_1 = require(\"./Particles/Particles\");\n\nvar BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\n\nvar Background_1 = require(\"./Background/Background\");\n\nvar Infection_1 = require(\"./Infection/Infection\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Theme_1 = require(\"./Theme/Theme\");\n\nvar Modes_1 = require(\"../../Enums/Modes\");\n\nvar FullScreen_1 = require(\"./FullScreen/FullScreen\");\n\nvar Motion_1 = require(\"./Motion/Motion\");\n\nvar ManualParticle_1 = require(\"./ManualParticle\");\n\nvar Options = /*#__PURE__*/function () {\n  function Options() {\n    _classCallCheck(this, Options);\n\n    this.autoPlay = true;\n    this.background = new Background_1.Background();\n    this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n    this.fullScreen = new FullScreen_1.FullScreen();\n    this.detectRetina = true;\n    this.fpsLimit = 60;\n    this.infection = new Infection_1.Infection();\n    this.interactivity = new Interactivity_1.Interactivity();\n    this.manualParticles = [];\n    this.motion = new Motion_1.Motion();\n    this.particles = new Particles_1.Particles();\n    this.pauseOnBlur = true;\n    this.pauseOnOutsideViewport = false;\n    this.themes = [];\n  }\n\n  _createClass(Options, [{\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c;\n\n      if (data === undefined) {\n        return;\n      }\n\n      if (data.preset !== undefined) {\n        if (data.preset instanceof Array) {\n          var _iterator = _createForOfIteratorHelper(data.preset),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var preset = _step.value;\n              this.importPreset(preset);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          this.importPreset(data.preset);\n        }\n      }\n\n      if (data.autoPlay !== undefined) {\n        this.autoPlay = data.autoPlay;\n      }\n\n      var detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n\n      if (detectRetina !== undefined) {\n        this.detectRetina = detectRetina;\n      }\n\n      var fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n\n      if (fpsLimit !== undefined) {\n        this.fpsLimit = fpsLimit;\n      }\n\n      if (data.pauseOnBlur !== undefined) {\n        this.pauseOnBlur = data.pauseOnBlur;\n      }\n\n      if (data.pauseOnOutsideViewport !== undefined) {\n        this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n      }\n\n      this.background.load(data.background);\n      this.fullScreen.load((_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode);\n      this.backgroundMask.load(data.backgroundMask);\n      this.infection.load(data.infection);\n      this.interactivity.load(data.interactivity);\n\n      if (data.manualParticles !== undefined) {\n        this.manualParticles = data.manualParticles.map(function (t) {\n          var tmp = new ManualParticle_1.ManualParticle();\n          tmp.load(t);\n          return tmp;\n        });\n      }\n\n      this.motion.load(data.motion);\n      this.particles.load(data.particles);\n      Utils_1.Plugins.loadOptions(this, data);\n\n      if (data.themes !== undefined) {\n        var _iterator2 = _createForOfIteratorHelper(data.themes),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var theme = _step2.value;\n            var optTheme = new Theme_1.Theme();\n            optTheme.load(theme);\n            this.themes.push(optTheme);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(name) {\n      if (name) {\n        var chosenTheme = this.themes.find(function (theme) {\n          return theme.name === name;\n        });\n\n        if (chosenTheme) {\n          this.load(chosenTheme.options);\n        }\n      } else {\n        var clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        var defaultTheme = this.themes.find(function (theme) {\n          return theme.default.value && (theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode || theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode);\n        });\n\n        if (!defaultTheme) {\n          defaultTheme = this.themes.find(function (theme) {\n            return theme.default.value && theme.default.mode === Modes_1.ThemeMode.any;\n          });\n        }\n\n        if (defaultTheme) {\n          this.load(defaultTheme.options);\n        }\n      }\n    }\n  }, {\n    key: \"importPreset\",\n    value: function importPreset(preset) {\n      this.load(Utils_1.Plugins.getPreset(preset));\n    }\n  }, {\n    key: \"fps_limit\",\n    get: function get() {\n      return this.fpsLimit;\n    },\n    set: function set(value) {\n      this.fpsLimit = value;\n    }\n  }, {\n    key: \"retina_detect\",\n    get: function get() {\n      return this.detectRetina;\n    },\n    set: function set(value) {\n      this.detectRetina = value;\n    }\n  }, {\n    key: \"backgroundMode\",\n    get: function get() {\n      return this.fullScreen;\n    },\n    set: function set(value) {\n      this.fullScreen.load(value);\n    }\n  }]);\n\n  return Options;\n}();\n\nexports.Options = Options;","map":{"version":3,"sources":["/home/sri/Desktop/DataAnecdotes/node_modules/tsparticles/dist/Options/Classes/Options.js"],"names":["Object","defineProperty","exports","value","Options","Interactivity_1","require","Particles_1","BackgroundMask_1","Background_1","Infection_1","Utils_1","Theme_1","Modes_1","FullScreen_1","Motion_1","ManualParticle_1","autoPlay","background","Background","backgroundMask","BackgroundMask","fullScreen","FullScreen","detectRetina","fpsLimit","infection","Infection","interactivity","Interactivity","manualParticles","motion","Motion","particles","Particles","pauseOnBlur","pauseOnOutsideViewport","themes","data","_a","_b","_c","undefined","preset","Array","importPreset","retina_detect","fps_limit","load","backgroundMode","map","t","tmp","ManualParticle","Plugins","loadOptions","theme","optTheme","Theme","push","name","chosenTheme","find","options","clientDarkMode","matchMedia","matches","defaultTheme","default","mode","ThemeMode","dark","light","any","getPreset"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Options = void 0;\nconst Interactivity_1 = require(\"./Interactivity/Interactivity\");\nconst Particles_1 = require(\"./Particles/Particles\");\nconst BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\nconst Background_1 = require(\"./Background/Background\");\nconst Infection_1 = require(\"./Infection/Infection\");\nconst Utils_1 = require(\"../../Utils\");\nconst Theme_1 = require(\"./Theme/Theme\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nconst FullScreen_1 = require(\"./FullScreen/FullScreen\");\nconst Motion_1 = require(\"./Motion/Motion\");\nconst ManualParticle_1 = require(\"./ManualParticle\");\nclass Options {\n    constructor() {\n        this.autoPlay = true;\n        this.background = new Background_1.Background();\n        this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n        this.fullScreen = new FullScreen_1.FullScreen();\n        this.detectRetina = true;\n        this.fpsLimit = 60;\n        this.infection = new Infection_1.Infection();\n        this.interactivity = new Interactivity_1.Interactivity();\n        this.manualParticles = [];\n        this.motion = new Motion_1.Motion();\n        this.particles = new Particles_1.Particles();\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = false;\n        this.themes = [];\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            if (data.preset instanceof Array) {\n                for (const preset of data.preset) {\n                    this.importPreset(preset);\n                }\n            }\n            else {\n                this.importPreset(data.preset);\n            }\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        this.background.load(data.background);\n        this.fullScreen.load((_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode);\n        this.backgroundMask.load(data.backgroundMask);\n        this.infection.load(data.infection);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle_1.ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.motion.load(data.motion);\n        this.particles.load(data.particles);\n        Utils_1.Plugins.loadOptions(this, data);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme_1.Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n            let defaultTheme = this.themes.find((theme) => theme.default.value &&\n                ((theme.default.mode === Modes_1.ThemeMode.dark && clientDarkMode) ||\n                    (theme.default.mode === Modes_1.ThemeMode.light && !clientDarkMode)));\n            if (!defaultTheme) {\n                defaultTheme = this.themes.find((theme) => theme.default.value && theme.default.mode === Modes_1.ThemeMode.any);\n            }\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    importPreset(preset) {\n        this.load(Utils_1.Plugins.getPreset(preset));\n    }\n}\nexports.Options = Options;\n"]},"metadata":{},"sourceType":"script"}